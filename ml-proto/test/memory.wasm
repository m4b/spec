;; (c) 2015 Andreas Rossberg

(module
  (memory 1024)
  (data "ABC\a7D")

  ;; Data section
  (func (result i32)
    (and.i32
      (eq.i32 (getnearu.i8 (const.i32 0)) (const.i32 65))
      (eq.i32 (getfaru.i8 (const.i64 3)) (const.i32 167))
    )
  )

  ;; Aligned read/write
  (func (result i32)
    (local i32 i32 i32)
    (setlocal 0 (const.i32 10))
    (label
      (loop
        (if
          (eq.i32 (getlocal 0) (const.i32 0))
          (break)
        )
        (setlocal 2 (mul.i32 (getlocal 0) (const.i32 4)))
        (setnears.i32 (getlocal 2) (getlocal 0))
        (setlocal 1 (getnears.i32 (getlocal 2)))
        (if
          (neq.i32 (getlocal 0) (getlocal 1))
          (return (const.i32 0))
        )
        (setlocal 0 (sub.i32 (getlocal 0) (const.i32 1)))
      )
    )
    (return (const.i32 1))
  )

  ;; Unaligned read/write
  (func (result i32)
    (local i32 f64 f64)
    (setlocal 0 (const.i32 10))
    (label
      (loop
        (if
          (eq.i32 (getlocal 0) (const.i32 0))
          (break)
        )
        (setlocal 2 (converts.i32.f64 (getlocal 0)))
        (setnearunaligned.f64 (getlocal 0) (getlocal 2))
        (setlocal 1 (getnearunaligned.f64 (getlocal 0)))
        (if
          (neq.f64 (getlocal 2) (getlocal 1))
          (return (const.i32 0))
        )
        (setlocal 0 (sub.i32 (getlocal 0) (const.i32 1)))
      )
    )
    (return (const.i32 1))
  )

  ;; Memory cast
  (func (result f64)
    (setnears.i64 (const.i32 8) (const.i64 -12345))
    (if
      (eq.f64 (getnear.f64 (const.i32 8)) (cast.i64.f64 (const.i64 -12345)))
      (return (const.f64 0))
    )
    (setfarunaligneds.i16 (const.i64 3) (const.i32 -23423))
    (return (getnear.f64 (const.i32 0)))
  )

  (export "data" 0)
  (export "aligned" 1)
  (export "unaligned" 2)
  (export "cast" 3)
)

(asserteq (invoke "data") (const.i32 1))
(asserteq (invoke "aligned") (const.i32 1))
(asserteq (invoke "unaligned") (const.i32 1))
(invoke "cast")  ;; -3.10552331246e+231 : f64
