;; (c) 2015 Andreas Rossberg

(module
  ;; Recursive factorial
  (func (param i64) (result i64)
    (if (eq.i64 (getparam 0) (const.i64 0))
      (const.i64 1)
      (mul.i64 (getparam 0) (call 0 (sub.i64 (getparam 0) (const.i64 1))))
    )
  )

  ;; Iterative factorial
  (func (param i64) (result i64)
    (local i64 i64)
    (setlocal 0 (getparam 0))
    (setlocal 1 (const.i64 1))
    (label
      (loop
        (if
          (eq.i64 (getlocal 0) (const.i64 0))
          (break 0)
          (block
            (setlocal 1 (mul.i64 (getlocal 0) (getlocal 1)))
            (setlocal 0 (sub.i64 (getlocal 0) (const.i64 1)))
          )
        )
      )
    )
    (return (getlocal 1))
  )

  (export "rec_fac" 0)
  (export "iter_fac" 1)
)

(asserteq (invoke "rec_fac" (const.i64 25)) (const.i64 7034535277573963776))
(asserteq (invoke "iter_fac" (const.i64 25)) (const.i64 7034535277573963776))
